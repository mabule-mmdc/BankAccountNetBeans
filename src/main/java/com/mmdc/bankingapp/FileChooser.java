/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mmdc.bankingapp;

import javax.swing.*;
import java.util.function.Consumer;

/**
 *
 * @author micahbule
 */
public class FileChooser extends javax.swing.JPanel {

    /**
     * Creates new form FileChooser
     * @param loadedFiles
     */
    public FileChooser(LoadedFiles loadedFiles) {
        this.loadedFiles = loadedFiles;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        holdersPath = new javax.swing.JTextField();
        accountsPath = new javax.swing.JTextField();
        transactionsPath = new javax.swing.JTextField();
        holdersChooser = new javax.swing.JButton();
        accountsChooser = new javax.swing.JButton();
        transactionsChooser = new javax.swing.JButton();

        jLabel1.setText("Choose Files to Load");

        jLabel2.setText("Holders");

        jLabel3.setText("Transactions");

        jLabel4.setText("Accounts");

        holdersChooser.setText("Select");
        holdersChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holdersChooserActionPerformed(evt);
            }
        });

        accountsChooser.setText("Select");
        accountsChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountsChooserActionPerformed(evt);
            }
        });

        transactionsChooser.setText("Select");
        transactionsChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionsChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(transactionsPath, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(transactionsChooser))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel4))
                            .addGap(33, 33, 33)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(holdersPath, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(holdersChooser))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(accountsPath, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(accountsChooser)))
                            .addGap(0, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(holdersPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(holdersChooser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(accountsPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accountsChooser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(transactionsPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transactionsChooser))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        holdersPath.getAccessibleContext().setAccessibleName("holdersPath");
        accountsPath.getAccessibleContext().setAccessibleName("accountsPath");
        transactionsPath.getAccessibleContext().setAccessibleName("transactionsPath");
        holdersChooser.getAccessibleContext().setAccessibleName("holdersChooser");
        accountsChooser.getAccessibleContext().setAccessibleName("accountsChooser");
        transactionsChooser.getAccessibleContext().setAccessibleName("transactionsChooser");

        getAccessibleContext().setAccessibleName("mainPanel");
    }// </editor-fold>//GEN-END:initComponents

    private void holdersChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holdersChooserActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        
        int choice = fileChooser.showOpenDialog(this);
        
        if (choice == JFileChooser.APPROVE_OPTION) {
            String path = fileChooser.getSelectedFile().getAbsolutePath();
            loadedFiles.setHolderFilePath(path);
            holdersPath.setText(path);

            repainter.accept(!loadedFiles.getHolderFilePath().isBlank() && !loadedFiles.getAccountsFilePath().isBlank() && !loadedFiles.getTransactionsFilePath().isBlank());
        }
    }//GEN-LAST:event_holdersChooserActionPerformed

    private void accountsChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountsChooserActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int choice = fileChooser.showOpenDialog(this);

        if (choice == JFileChooser.APPROVE_OPTION) {
            String path = fileChooser.getSelectedFile().getAbsolutePath();
            loadedFiles.setAccountsFilePath(path);
            accountsPath.setText(path);

            repainter.accept(!loadedFiles.getHolderFilePath().isBlank() && !loadedFiles.getAccountsFilePath().isBlank() && !loadedFiles.getTransactionsFilePath().isBlank());
        }
    }//GEN-LAST:event_accountsChooserActionPerformed

    private void transactionsChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionsChooserActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int choice = fileChooser.showOpenDialog(this);

        if (choice == JFileChooser.APPROVE_OPTION) {
            String path = fileChooser.getSelectedFile().getAbsolutePath();
            loadedFiles.setTransactionsFilePath(path);
            transactionsPath.setText(path);

            repainter.accept(!loadedFiles.getHolderFilePath().isBlank() && !loadedFiles.getAccountsFilePath().isBlank() && !loadedFiles.getTransactionsFilePath().isBlank());
        }
    }//GEN-LAST:event_transactionsChooserActionPerformed

    private Consumer<Boolean> repainter;
    private LoadedFiles loadedFiles;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accountsChooser;
    private javax.swing.JTextField accountsPath;
    private javax.swing.JButton holdersChooser;
    private javax.swing.JTextField holdersPath;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton transactionsChooser;
    private javax.swing.JTextField transactionsPath;
    // End of variables declaration//GEN-END:variables
    public void setRepainter(Consumer<Boolean> repainter) {
        this.repainter = repainter;
    }
}
